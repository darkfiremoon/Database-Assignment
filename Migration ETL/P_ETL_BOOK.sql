create or replace
PROCEDURE P_ETL_BOOK AS
CURSOR EXT_CUR_BOOK IS
SELECT EXTBOOK.*, mtauthor.ID as AUTHORID, mtpubli.ID as PID, mtbktype.ID as BOOKTYPE,
MTBOOK.ID AS MTBOOKID
FROM T_EXT_BOOK EXTBOOK
LEFT JOIN T_MT_BOOK MTBOOK
ON EXTBOOK.CODE = MTBOOK.CD
LEFT JOIN T_MT_AUTHOR mtauthor on EXTBOOK.authorcd = mtauthor.CD
LEFT JOIN T_MT_PUBLI mtpubli on EXTBOOK.publishercd = mtpubli.CD
LEFT JOIN T_MT_BKTYPE mtbktype on EXTBOOK.bktypecd = mtbktype.CD;
EXT_ROW EXT_CUR_BOOK%ROWTYPE;

BEGIN

FOR EXT_ROW IN EXT_CUR_BOOK LOOP

	IF EXT_ROW.MTBOOKID IS NULL THEN
	INSERT INTO T_MT_BOOK
	VALUES
	(
		SYS_GUID(),
		EXT_ROW.TITLE,
		EXT_ROW.DESCRIPTION,
		EXT_ROW.AUTHORID,
		EXT_ROW.PID,
		EXT_ROW.BOOKTYPE,
		EXT_ROW.PRICE,
		EXT_ROW.STOCK,
		EXT_ROW.CODE
	);
	ELSE
	UPDATE T_MT_BOOK
	SET TITLE = EXT_ROW.TITLE,
		DESCRIPTION = EXT_ROW.DESCRIPTION,
		AUTHORID = EXT_ROW.AUTHORID,
		PID = EXT_ROW.PID,
                BOOKTYPE = EXT_ROW.BOOKTYPE,
		PRICE = EXT_ROW.PRICE,
		STOCK = EXT_ROW.STOCK
	WHERE CD = EXT_ROW.CODE;
	END IF;
END LOOP;
COMMIT;
END P_ETL_BOOK;
