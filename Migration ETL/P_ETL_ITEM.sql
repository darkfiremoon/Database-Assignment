create or replace
PROCEDURE P_ETL_ITEM AS
CURSOR EXT_CUR_ITEM IS
SELECT exitem.*, mtstatio.ID as PRODID, mtitem.ID as MTITEMID, exitem.ITEM_CODE AS EXITEM_CODE, mtbook.ID as BOOKID
FROM T_EXT_ITEM exitem
LEFT JOIN T_MT_ITEM mtitem
ON exitem.CODE = mtitem.CD
LEFT JOIN T_MT_STATIO mtstatio
ON  exitem.ITEM_CODE= mtstatio.CD
LEFT JOIN T_MT_BOOK mtbook
ON exitem.ITEM_CODE = mtbook.CD;
EXT_ROW EXT_CUR_ITEM%ROWTYPE;
BEGIN

FOR EXT_ROW IN EXT_CUR_ITEM LOOP
	IF EXT_ROW.EXITEM_CODE LIKE 'S%' THEN 
	IF EXT_ROW.MTITEMID IS NULL THEN
	INSERT INTO T_MT_ITEM
	VALUES
	(
		SYS_GUID(),
		EXT_ROW.PRODID,
		EXT_ROW.CODE
	);
	ELSE
	UPDATE T_MT_ITEM
	SET PRODUCT_ID = EXT_ROW.PRODID
		WHERE CD = EXT_ROW.CODE;
                END IF;
        ELSE
        IF EXT_ROW.MTITEMID IS NULL THEN
	INSERT INTO T_MT_ITEM
	VALUES
	(
		SYS_GUID(),
		EXT_ROW.BOOKID,
		EXT_ROW.CODE
	);
	ELSE
	UPDATE T_MT_ITEM
	SET PRODUCT_ID = EXT_ROW.PRODID
		WHERE CD = EXT_ROW.CODE;
	END IF;
	END IF;
END LOOP;
COMMIT;
END P_ETL_ITEM;